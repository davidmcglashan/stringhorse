/* Keyframes which manage the tray sliding in and out by setting its left position. */
@keyframes slideIn {
  0% { left: 100% }
  100% { left: 40% }
}
@keyframes slideOut {
  0% { left: 40% }
  100% { left: 100% }
}

/* Styling and layout for the slide-in tray itself. */
section#tray {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 100%;
	width: 60%;
	height: 100%;
	background-color: var(--pane-bg);
	border-left: var(--pane-border) 1px solid;
	z-index: 2;

	display: flex;	/* Use flebox here. Tabs at the top, tab content filling the remaining container (with scrollbars) ... */
  min-height: 100%;
  flex-direction: column;
	overflow-x: hidden;
	overflow-y: hidden;
}
	/* These two classes are applied to the tray to trigger its animations in and out. */
	section#tray.open {
		animation: slideIn 0.5s forwards;
	}
	section#tray.closed {
		animation: slideOut 0.5s forwards;
	}

	/* Tray content invokes flex and re-instates the Y scrollbar which was suppressed on the tray itself. */
	section#tray #_tray {
		flex: 1;
		overflow-y: auto;
	}

	/* The tray's tabs go in the top portion of the tray. */
	section#tray div.tabs {
		padding: 1em 1em 0em;
		background-color: var(--pane-bg);
	}
		/* Put the toolbar (close button) in the top right of the slide-in tray. */
		section#tray div.tabs div.toolbar {
			position: absolute;
			top: 1em;
			right: 0em;
			text-align: right;
			z-index: 2;
		}
		section#tray div.tabs div.toolbar a {
			padding: 0.5em;
		}

/* Restore relative position to the commands tray so its absolutely positioned content will scroll. */
div#_tray-commands {
	position: relative;
} 
	/* The command list puts the commands on the left ... */
	div#_tray-commands ul {
		list-style-type: none;
		padding-inline-start: 2em;
		line-height: 1.4em;
	}
	div#_tray-commands li {
		color: var(--button-alt-fg);
	}

	/* ... and their short descriptions indented on the right. */
	div#_tray-commands .help-desc {
		position: absolute;
		display: inline-block;
		left: 9em;	
	}

	/* Command parameters get softer styling. */
	div#_tray-commands .params {
		color: var(--button-alt-fg);
	}

	/* Keep all the help texts nicely aligned. */
	div#_tray-commands p {
		margin: 0.25em;
		line-height: 1.25em;
		padding-left: 1em;
	}
	div#_tray-commands > div.text p {
		margin-bottom: 1em;
	}
	div#_tray-commands p.see-also {
		font-size: 90%;
		color: var(--button-alt-fg);
		margin: 0 1em;
	}

/* Variables and About are slabs of text so get slabby, texty stylings. */
div#_tray-variables,
div#_tray-about {
	padding: 1em;
	line-height: 1.4em;
}
	div#_tray-about h1 {
		margin: 0;
	}

	/* Stop that image getting too wide. */
	div#_tray-about img {
		width: 10em;
	}
